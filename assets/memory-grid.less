@color: #2f5fce;
@itemGap: 2px;

html {
	font-family: sans-serif;
	font-size: 14px;
}

button {
	display: inline-block;
	color: #FFF;
	background: @color;
	border: 0;
	padding: .5em 1.25em;
}

#combo-container.update {
	#game-score-max-combo {
		color: #fff;
		background: #000;
	}
}
#game-score-max-combo {
	padding: .2em;
	transition: all .2s;
}

#game-content {
	text-align: center;

	&:not(.game-started) button {
		box-shadow: 0 1px 4px 0 rgba(0,0,0,.2);
		.floatyButton() {
		@offset: 8px;
		0% {
			transform: translateY(-@offset);
		}
		65% {
			transform: translateY(0px);
		}
		100% {
			transform: translateY(-@offset);
		}
	}

	.animate(@name: floaty, {.floatyButton();}, @duration: 1.8s, @iteration: infinite);
	}
}

#game-board {
	display: inline-block;
	.clearfix();
	margin: 10px 0 0 0;
	&:not(.hide-solution) {
		.correct-item {
			background: @color;
		}
	}
	&.hide-solution .correct-item {
		transition: background: .1s;
	}
	&:empty~#game-stats {
		display: none;
	}
}

#game-stats {
	margin-top: 10px;
	text-align: center;
	&>* {
		display: inline-block;
		margin-left: 1em;
	}
}

#game-timer {
	display: inline-block;
	vertical-align: bottom;
	width: 8px;
	position: relative;
	top: -7px;
	background: #000;
	&.update {
		//height: 70px;
		transition-duration: 0 !important;
	}
	&:not(.update) {
		height: 0 !important;
		transition-property: height;
	}
}

.game-grid-item {
	@bg: #D3D3D3;
	@size: 40px;
	float: left;
	width: @size;
	height: @size;
	margin-right: @itemGap;
	margin-bottom: @itemGap;
	background: @bg;
	transition: all .25s;
	cursor: pointer;
	&:hover:not(.selected) {
		background: darken(@bg, 10%);
		transition-duration: 0 !important;
	}
	&:not(.created) {
		opacity: 0;
		transform: scale(.5, .5);
	}
	&.failed {
		background: red;
	}

}

.game-grid-row {
	clear: both;
}

.correct-item.selected {
	background: @color;
}

#dialog-box {
	text-align: center;
	padding-top: 1em;
}

.level-failed {
	color: red;
}

#game-content:not(.game-over) .dialog-message {
	opacity: 0;
	.fadeInOut() {
		30% {
			transform: translateY(3px);
			opacity: 1;
		}
		80% {
			opacity: 1;
			transform: scale(1, 1);
		}
		95% {
			opacity: 0;
			transform: scale(1.3, 1.3);
		}
	}

	.animate(@name: showBox, {.fadeInOut();});

	.cheer {
		font-size: 1.3em;
		font-weight: bold;
	}
}

// css animation mixin
.animate(@name: showBox, @animationStyles, @duration: 1s, @iteration: 1) {
	@animationProps: @name @duration ease 0s @iteration;
	-webkit-animation: @animationProps;
	-moz-animation: @animationProps;
	animation: @animationProps;

	@-webkit-keyframes @name {
		@animationStyles();
	}
	@-moz-keyframes @name {
		@animationStyles();
	}
	@keyframes @name {
		@animationStyles();
	}
}